{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","App","useState","setGoods","errorMessage","setErrorMessage","handleGoods","getGoods","catch","className","type","onClick","sort","good1","good2","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAkB,UAAQ,OAAOC,MAAO,CAAEC,MAAOF,EAAKE,OAAtD,SACGF,EAAKG,MADCH,EAAKI,UCJb,SAASC,IACd,OAAOC,MAJI,yEAKRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICJMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAc,SAACC,GACnBA,EACGT,KAAKK,GACLK,OAAM,kBAAMH,EAAgB,uBAGjC,OACE,sBAAKI,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAYV,MAH7B,4BAQA,wBACEc,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAML,EDpBdV,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZuB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMnB,KAAKqB,cAAcD,EAAMpB,SACtDsB,MAAM,EAAG,QCcV,gCAQA,wBACEN,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EDrBdV,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM4B,QAAO,SAAA1B,GAAI,MAhBlB,QAgBsBA,EAAKE,cCiBvC,4BAQCW,EAEG,4BACGA,IAIH,cAAC,EAAD,CAAWf,MAAOA,QCjD5B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.1191dc8f.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} data-cy=\"good\" style={{ color: good.color }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\nconst COLOR_RED = 'red';\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((good1, good2) => good1.name.localeCompare(good2.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === COLOR_RED));\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleGoods = (getGoods: Promise<Good[]>) => {\n    getGoods\n      .then(setGoods)\n      .catch(() => setErrorMessage('Try again later'));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleGoods(getAll())}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleGoods(get5First())}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleGoods(getRedGoods())}\n      >\n        Load red goods\n      </button>\n\n      {errorMessage\n        ? (\n          <p>\n            {errorMessage}\n          </p>\n        )\n        : (\n          <GoodsList goods={goods} />\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}